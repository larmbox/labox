@use 'sass:math';
@import '../../theme/imports';

@mixin size($suffix, $size) {
  &.#{c('LRadio')}-#{$suffix} {
    .#{c('LRadio')}-inner .#{c('LRadio')}-context {
      margin-left: calc($size + v(spacing-xs));
    }

    .#{c('LRadio')}-box {
      width: $size;
      height: $size;
      .#{c('LRadio')}-inner-box {
        border-width: calc($size * 0.25);
        min-width: $size;
        min-height: $size;
      }
    }

    input {
      width: $size;
      height: $size;
    }
  }
}

@mixin highlight($color) {
  .#{c('LRadio')}-box {
    border-color: color($color, 8);
  }

  input:disabled + .#{c('LRadio')}-box {
    border-color: color($color, 8);
  }
}

@mixin color($color) {
  &.#{c('LRadio')}-highlight {
    @include highlight($color);
  }

  input {
    &:checked {
      + .#{c('LRadio')}-box {
        border-color: color($color, 8);
        .#{c('LRadio')}-inner-box {
          border-color: color($color, 8);
        }
      }
    }

    &:focus {
      + .#{c('LRadio')}-box {
        border-color: color($color, 8);
        box-shadow: 0 0 0 v(focus-shadow-size, c('LRadio')) color($color, 'T20');
      }
    }

    &:disabled:checked {
      + .#{c('LRadio')}-box {
        border-color: color($color, 4);
        .#{c('LRadio')}-inner-box {
          border-color: color($color, 4);
        }
      }
    }

    &:disabled:not(:checked) {
      + .#{c('LRadio')}-box {
        background-color: v(background-color--disabled);
      }
    }
  }
}

.#{c('LRadio')} {
  display: inline-flex;
  position: relative;
  margin-bottom: v(spacing);
  align-items: center;

  &.#{c('LRadio')}-block {
    width: 100%;
    display: flex;
  }

  .#{c('LRadio')}-box {
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    border: v(border-width, c('LRadio')) solid v(border-color, c('LRadio'));
    background-color: v(background-color);
    border-radius: v(border-radius, c('LRadio'));
    box-shadow: 0 0 0 v(focus-shadow-size) transparent;
    transition: border-color v(transition-time) v(transition-type),
      background-color v(transition-time) v(transition-type),
      box-shadow v(transition-time) v(transition-type);

    color: transparent;

    .#{c('LRadio')}-inner-box {
      transition: border-color v(transition-time) v(transition-type);
      background-color: transparent;
      border-radius: v(border-radius, c('LRadio'));
      border: 4px solid transparent;
    }
  }

  .#{c('LRadio')}-inner {
    > div:first-of-type {
      display: flex;
      align-items: center;

      .#{p('form-label')} {
        display: block;
        margin-bottom: 0;
        padding-left: v(spacing-xs);
      }
    }
  }

  input {
    position: absolute;
    margin: 0;
    opacity: 0;
    z-index: 1;
  }

  @mixin variants($variant) {
    &.#{c('LRadio')}-#{$variant} {
      @include color($variant);
    }
  }

  @each $variant in $lx-palettes {
    @include variants($variant);
  }

  &.#{p('form-feedback-error')} {
    @include color('error');

    .#{c('LRadio')}-box {
      border-color: color('error', 8);
    }
  }

  &.#{p('form-feedback-success')} {
    @include color('success');

    .#{c('LRadio')}-box {
      border-color: color('success', 8);
    }
  }

  @include size('md', v(size, c('LRadio')));
  @include size('sm', v(size-sm, c('LRadio')));
  @include size('lg', v(size-lg, c('LRadio')));
}
