@use 'sass:math';
@import '../../theme/imports';

@mixin color-spinner($color) {
  color: color($color, 8);
}

@mixin color-dots($color) {
  > div {
    color: color($color, 8);
  }
}

.#{c('LLoading')} {
  display: inline-flex;

  &.#{c('LLoading')}-spinner {
    width: v(loading-size);
    height: v(loading-size);
    border-width: calc(v(loading-size) / 5);
    border-style: solid;
    border-color: currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    vertical-align: text-bottom;
    animation: spinner 0.75s linear infinite;
  }

  &.#{c('LLoading')}-dots > div {
    display: flex;
    > div {
      border-width: calc(v(loading-size) / 5);
      border-style: solid;
      border-color: currentColor;
      border-radius: 50%;
      vertical-align: text-bottom;
      animation: dots 1.4s v(transition-type) infinite;
      animation-delay: 0.2s;
      margin: 0 0.06rem;
      &:first-of-type {
        animation-delay: 0s;
      }
      &:last-of-type {
        animation-delay: 0.4s;
      }
    }
  }

  &.#{c('LLoading')}-sm {
    &.#{c('LLoading')}-spinner {
      width: v(loading-size-sm);
      height: v(loading-size-sm);
      border-width: calc(v(loading-size-sm) / 5);
    }
    &.#{c('LLoading')}-dots > div > div {
      border-width: calc(v(loading-size-sm) / 5);
    }
  }

  &.#{c('LLoading')}-lg {
    &.#{c('LLoading')}-spinner {
      width: v(loading-size-lg);
      height: v(loading-size-lg);
      border-width: calc(v(loading-size-lg) / 5);
    }
    &.#{c('LLoading')}-dots > div > div {
      border-width: calc(v(loading-size-lg) / 5);
    }
  }

  @mixin variants($variant) {
    &.#{c('LLoading')}-#{$variant} {
      &.#{c('LLoading')}-spinner {
        @include color-spinner($variant);
      }
      &.#{c('LLoading')}-dots {
        @include color-dots($variant);
      }
    }
  }

  @each $variant in $lx-palettes {
    @include variants($variant);
  }
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes dots {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(0.8);
    opacity: 0.3;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}
